/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.year;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.ClienteVO;
import modelo.Conexion;
import modelo.EmpleadoVO;
import modelo.NotaVO;
import modelo.PaqueteVO;
import modelo.PaquetesDAO;
import modelo.PersonaVO;
import modelo.PromocionVO;
import modelo.ServicioVO;
import modelo.Servicio_PaqueteVO;

/**
 *
 * @author jhond
 */
public class vistaNota extends javax.swing.JFrame {
    PaquetesDAO pa=new PaquetesDAO();
    PromocionVO po=new PromocionVO();
    ServicioVO BusServi=new ServicioVO();
    PaqueteVO BusPaq=new PaqueteVO();
    NotaVO nota=new NotaVO();
    private EmpleadoVO user;
    private float subtotal=0;
    private float descuento=0;
    private float totalPago=0;
    private String ruta;

    /**
     * Creates new form vistaEmpleados
     */
    public vistaNota(EmpleadoVO user) {
        this.user=user;
        initComponents();
        txtNombre.setEnabled(false);
        txtApellido.setEnabled(false);
        txtDireccion.setEnabled(false);
        txtTelefono.setEnabled(false);
        txtCorreo.setEnabled(false);
        txtDia1.setEnabled(false);
        txtMes1.setEnabled(false);
        txtAno1.setEnabled(false);
        txtDia2.setEnabled(false);
        txtMes2.setEnabled(false);
        txtAno2.setEnabled(false);
        btnEliminar.setVisible(false);
        btnModificar.setVisible(false);
        btnAgregar.setVisible(false);
        btnImprimir.setVisible(false);
        this.cboPaquete.setModel(pa.ObtenerNombres());
        this.cboServicio.setModel(pa.ObtenerServicios());
        this.cboPromocion.setModel(po.ObtenerPromociones());
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblCedula = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnMasPaquete = new javax.swing.JButton();
        btnMenosPaquete = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnMasServicio = new javax.swing.JButton();
        btnMenosServicio = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtMes1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDia1 = new javax.swing.JTextField();
        txtAno1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        lblAno2 = new javax.swing.JLabel();
        lblDia2 = new javax.swing.JLabel();
        txtDia2 = new javax.swing.JTextField();
        txtAno2 = new javax.swing.JTextField();
        lblMes2 = new javax.swing.JLabel();
        txtMes2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        btnHome = new javax.swing.JButton();
        btnBuscaCliente = new javax.swing.JButton();
        cboPaquete = new javax.swing.JComboBox<>();
        cboServicio = new javax.swing.JComboBox<>();
        cboPromocion = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaPaquetes = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaServicios = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtDescuento = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtPorcentaje = new javax.swing.JTextField();
        btnImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logoPequeño.jpeg"))); // NOI18N
        jLabel1.setText("jLabel1");

        lblCedula.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblCedula.setText("CI Cliente");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Apellido");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Telefono");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Dirección");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Correo electronico");

        txtCedula.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        txtTelefono.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        txtDireccion.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        txtCorreo.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        btnBuscar.setText("Buscar nota");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/añadir.png"))); // NOI18N
        btnAgregar.setText("Generar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificar.png"))); // NOI18N
        btnModificar.setText("Modificar");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Paquete");

        btnMasPaquete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnMasPaquete.setText("+");
        btnMasPaquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMasPaqueteActionPerformed(evt);
            }
        });

        btnMenosPaquete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnMenosPaquete.setText("-");
        btnMenosPaquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenosPaqueteActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Servicio");

        btnMasServicio.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnMasServicio.setText("+");
        btnMasServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMasServicioActionPerformed(evt);
            }
        });

        btnMenosServicio.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnMenosServicio.setText("-");
        btnMenosServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenosServicioActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setText("Detalle Paquetes");

        txtMes1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel11.setText("Fecha Contrato");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Año");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Día");

        txtDia1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        txtAno1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Mes");

        lblAno2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAno2.setText("Año");

        lblDia2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDia2.setText("Día");

        txtDia2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtDia2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDia2FocusLost(evt);
            }
        });
        txtDia2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDia2KeyTyped(evt);
            }
        });

        txtAno2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtAno2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAno2FocusLost(evt);
            }
        });
        txtAno2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAno2KeyTyped(evt);
            }
        });

        lblMes2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMes2.setText("Mes");

        txtMes2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMes2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMes2FocusLost(evt);
            }
        });
        txtMes2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMes2KeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel18.setText("Fecha Evento");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel19.setText("Promoción");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel20.setText("Numero de Nota");

        txtNumero.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/home.png"))); // NOI18N
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnBuscaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        btnBuscaCliente.setText("Buscar cliente");
        btnBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaClienteActionPerformed(evt);
            }
        });

        cboPaquete.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboServicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPromocion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboPromocion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPromocionActionPerformed(evt);
            }
        });

        TablaPaquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TablaPaquetes);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel15.setText("Detalle Servicios");

        TablaServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TablaServicios);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel16.setText("Subtotal:");

        txtSubtotal.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSubtotal.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel17.setText("$");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel21.setText("Descuento:");

        txtDescuento.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtDescuento.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel22.setText("$");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel23.setText("Total a pagar:");

        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtTotal.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel24.setText("$");

        txtPorcentaje.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtPorcentaje.setEnabled(false);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificar.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(180, 180, 180)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(cboPaquete, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(cboServicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboPromocion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel19))
                                .addGap(100, 100, 100)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnMasServicio)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnMenosServicio))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnMasPaquete)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnMenosPaquete)))
                                    .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(lblCedula)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel5))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel20)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDia1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMes1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAno1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnBuscaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                    .addComponent(jLabel18))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDia2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDia2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(lblMes2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMes2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblAno2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAno2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel17)
                                .addGap(116, 116, 116)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel22)
                                .addGap(145, 145, 145)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel24))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jScrollPane3)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnHome)
                                .addGap(27, 27, 27)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCedula))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)))
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscaCliente)
                        .addGap(103, 103, 103)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDia2)
                        .addComponent(jLabel18))
                    .addComponent(txtAno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMes2)
                        .addComponent(lblAno2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(jLabel11))
                    .addComponent(txtAno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMasPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMenosPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cboServicio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMasServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMenosServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboPromocion)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAgregar)
                        .addComponent(btnEliminar)
                        .addComponent(btnModificar)
                        .addComponent(btnImprimir))
                    .addComponent(btnHome))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (todoOK()) {
            AgregarNuevaNota();
            recorrerPaquete();
            recorrerServicio();
            JOptionPane.showMessageDialog(null, "Registro exitoso!");
            btnImprimir.setVisible(true);
            btnBuscar.setText("Otra busqueda");
            btnBuscar.setEnabled(true);
            btnBuscaCliente.setEnabled(false);
            btnAgregar.setVisible(false);
            txtDia2.setEnabled(false);
            txtMes2.setEnabled(false);
            txtAno2.setEnabled(false);
            btnMasPaquete.setEnabled(false);
            btnMasServicio.setEnabled(false);
            btnMenosPaquete.setEnabled(false);
            btnMenosServicio.setEnabled(false);
            cboPaquete.setEnabled(false);
            cboServicio.setEnabled(false);
            cboPromocion.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(null, "No se pudo registrar la nota de venta");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        vistaMenuPrincipal vista = new vistaMenuPrincipal(user); 
        vista.setVisible (true);
        this.setVisible(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        nota=new NotaVO();
        if (btnBuscar.getText()=="Buscar nota") {
            Conexion con=new Conexion();
            Connection accesoBD = con.getConexion();
            try{
                PreparedStatement ps=accesoBD.prepareStatement("select * from nota_venta where numero=?");
                ps.setInt(1, Integer.parseInt(txtNumero.getText()));

                ResultSet rs=ps.executeQuery();
                if (rs.next()){
                    nota.setNumero(rs.getInt(1));
                    nota.setCi_cli(rs.getString(2));
                    nota.setNombre_pro(rs.getString(3));
                    nota.setFecha_contrato(rs.getDate(4));
                    nota.setFecha_evento(rs.getDate(5));
                }
            }
            catch(Exception e)
            {

            }
            if (nota.getNumero()!=0) {
                ClienteVO C=new ClienteVO();
                PersonaVO P=new PersonaVO();
                NotaVO N=new NotaVO();
                con=new Conexion();
                accesoBD = con.getConexion();
                String cei;
                cei=nota.getCi_cli();
                try{
                    PreparedStatement ps=accesoBD.prepareStatement("select * from cliente where ci=?");
                    ps.setString(1, cei);

                    ResultSet rs=ps.executeQuery();
                    if (rs.next()){
                        C.setCi(rs.getString(1));
                    }
                }
                catch(Exception e)
                {

                }
                if (C.getCi()!="") {
                    try{
                        PreparedStatement ps=accesoBD.prepareStatement("select * from persona where ci=?");
                        ps.setString(1, C.getCi());

                        ResultSet rs=ps.executeQuery();
                        if (rs.next()){
                            P.setCi(rs.getString(1));
                            P.setNombre(rs.getString(2));
                            P.setApellido(rs.getString(3));
                            P.setDireccion(rs.getString(4));
                            P.setTelefono(rs.getString(5));
                            P.setCorreo(rs.getString(6));
                        }
                    }
                    catch(Exception e)
                    {

                    }
                    //JOptionPane.showMessageDialog(null, "Cliente encontrado");
                    txtCedula.setText(P.getCi());
                    txtNombre.setText(P.getNombre());
                    txtApellido.setText(P.getApellido());
                    txtDireccion.setText(P.getDireccion());
                    txtTelefono.setText(P.getTelefono());
                    txtCorreo.setText(P.getCorreo());
                    txtCedula.setEditable(false);
                    
                    
                }
                txtNumero.setEnabled(false);
                txtDia1.setText(Integer.toString(nota.getFecha_contrato().getDate()));
                txtMes1.setText(Integer.toString(nota.getFecha_contrato().getMonth()+1));
                txtAno1.setText(Integer.toString(nota.getFecha_contrato().getYear()+1900));
                txtDia1.setEnabled(false);
                txtMes1.setEnabled(false);
                txtAno1.setEnabled(false);
                txtDia2.setText(Integer.toString(nota.getFecha_evento().getDate()));
                txtMes2.setText(Integer.toString(nota.getFecha_evento().getMonth()+1));
                txtAno2.setText(Integer.toString(nota.getFecha_evento().getYear()+1900));
                txtDia2.setEnabled(false);
                txtMes2.setEnabled(false);
                txtAno2.setEnabled(false);
                btnMasPaquete.setEnabled(false);
                btnMasServicio.setEnabled(false);
                btnMenosPaquete.setEnabled(false);
                btnMenosServicio.setEnabled(false);
                cboPaquete.setEnabled(false);
                cboServicio.setEnabled(false);
                cboPromocion.setEnabled(false);
                btnBuscaCliente.setEnabled(false);
                
                //CargarServicios
                Conexion conex = new Conexion();
                ServicioVO v=new ServicioVO();
                try {
                    PreparedStatement consulta = conex.getConexion().prepareStatement("select S.nombre,S.costo from servicio S, servicio_nota SE where S.nombre=SE.nombre and SE.numero='" + txtNumero.getText()+"'");
                    ResultSet res = consulta.executeQuery();//permite que se ejecuta la busqueda en consulta, result set es un arraylist de los objetos de busqueda.
                    i=0;
                    while (res.next()) {
                        v.setNombre((res.getString("nombre")));
                        v.setCosto((Float.parseFloat(res.getString("costo"))));

                 TablaServicios.setValueAt(v.getNombre(), i,0);
                  TablaServicios.setValueAt(v.getCosto(), i,1);

                  i++;
                    }
                   total1=i;
                    res.close();
                    conex.desconectar();

                } catch (SQLException e) {
                    System.out.println("" + e.getMessage());

                }
                //CargarPaquetes
                conex = new Conexion();
                PaqueteVO ve=new PaqueteVO();
                try {
                    PreparedStatement consulta = conex.getConexion().prepareStatement("select S.nombre,S.costo from paquete S, paquete_nota SE where S.nombre=SE.nombre and SE.numero='" + txtNumero.getText()+"'");
                    ResultSet res = consulta.executeQuery();//permite que se ejecuta la busqueda en consulta, result set es un arraylist de los objetos de busqueda.
                    i=0;
                    while (res.next()) {
                        ve.setNombre((res.getString("nombre")));
                        ve.setCosto((Float.parseFloat(res.getString("costo"))));

                 TablaPaquetes.setValueAt(ve.getNombre(), i,0);
                  TablaPaquetes.setValueAt(ve.getCosto(), i,1);

                  i++;
                    }
                   total=i;
                    res.close();
                    conex.desconectar();

                } catch (SQLException e) {
                    System.out.println("" + e.getMessage());

                }
                
                //CargarPromo
                if (nota.getNombre_pro()==null) {
                    cboPromocion.setSelectedItem("Ninguno");
                }else{
                    cboPromocion.setSelectedItem(nota.getNombre_pro());
                }
                btnImprimir.setVisible(true);
                btnBuscar.setText("Otra busqueda");

            }else{
                JOptionPane.showMessageDialog(null, "Nota de venta no encontrada");
                btnAgregar.setVisible(false);
            }
        } else {
            btnBuscar.setText("Buscar nota");
            txtNumero.setText("");
            txtCedula.setText("");
            txtNumero.setEditable(true);
            txtNumero.setEnabled(true);
            txtCedula.setEditable(true);
            txtCedula.setEnabled(true);
            txtNombre.setEnabled(false);
            txtApellido.setEnabled(false);
            txtDireccion.setEnabled(false);
            txtTelefono.setEnabled(false);
            txtCorreo.setEnabled(false);
            txtDia1.setEnabled(false);
            txtMes1.setEnabled(false);
            txtAno1.setEnabled(false);
            txtDia2.setEnabled(false);
            txtMes2.setEnabled(false);
            txtAno2.setEnabled(false);
            btnEliminar.setVisible(false);
            btnModificar.setVisible(false);
            btnAgregar.setVisible(false);
            btnBuscaCliente.setEnabled(true);
            txtNombre.setText("");
            txtApellido.setText("");
            txtDireccion.setText("");
            txtTelefono.setText("");
            txtCorreo.setText("");
            txtDia1.setText("");
            txtMes1.setText("");
            txtAno1.setText("");
            txtDia2.setText("");
            txtMes2.setText("");
            txtAno2.setText("");
            btnImprimir.setVisible(false);
            
            this.cboPaquete.setModel(pa.ObtenerNombres());
            this.cboServicio.setModel(pa.ObtenerServicios());
            this.cboPromocion.setModel(po.ObtenerPromociones());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaClienteActionPerformed
        if (btnBuscaCliente.getText()=="Buscar cliente") {
            ClienteVO C=new ClienteVO();
            PersonaVO P=new PersonaVO();
            NotaVO N=new NotaVO();
            Conexion con=new Conexion();
            Connection accesoBD = con.getConexion();
            String cei;
            cei=txtCedula.getText();
            try{
                PreparedStatement ps=accesoBD.prepareStatement("select * from cliente where ci=?");
                ps.setString(1, cei);

                ResultSet rs=ps.executeQuery();
                if (rs.next()){
                    C.setCi(rs.getString(1));
                }
            }
            catch(Exception e)
            {

            }
            if (C.getCi()!="") {
                try{
                    PreparedStatement ps=accesoBD.prepareStatement("select * from persona where ci=?");
                    ps.setString(1, C.getCi());

                    ResultSet rs=ps.executeQuery();
                    if (rs.next()){
                        P.setCi(rs.getString(1));
                        P.setNombre(rs.getString(2));
                        P.setApellido(rs.getString(3));
                        P.setDireccion(rs.getString(4));
                        P.setTelefono(rs.getString(5));
                        P.setCorreo(rs.getString(6));
                    }
                }
                catch(Exception e)
                {

                }
                JOptionPane.showMessageDialog(null, "Cliente encontrado");
                txtNombre.setText(P.getNombre());
                txtApellido.setText(P.getApellido());
                txtDireccion.setText(P.getDireccion());
                txtTelefono.setText(P.getTelefono());
                txtCorreo.setText(P.getCorreo());
                txtCedula.setEditable(false);
                btnAgregar.setVisible(true);
                btnBuscaCliente.setText("Otra Busqueda");
                //numero de nota
                try{
                    PreparedStatement ps=accesoBD.prepareStatement("select max(numero) from nota_venta");
                    ResultSet rs=ps.executeQuery();
                    if (rs.next()){
                        N.setNumero(rs.getInt(1)+1);
                        N.asignarFechaActual();
                    }else{
                        N.setNumero(1);
                        N.asignarFechaActual();
                    }
                    //System.out.println("numero> "+N.getNumero());
                    //System.out.println("feche> "+N.getFecha_contrato());
                    
                }
                catch(Exception e)
                {

                }
                txtNumero.setText(Integer.toString(N.getNumero()));
                txtNumero.setEnabled(false);
                txtDia1.setText(Integer.toString(N.getFecha_contrato().getDate()));
                txtMes1.setText(Integer.toString(N.getFecha_contrato().getMonth()+1));
                txtAno1.setText(Integer.toString(N.getFecha_contrato().getYear()+1900));
                txtDia1.setEnabled(false);
                txtMes1.setEnabled(false);
                txtAno1.setEnabled(false);
                txtDia2.setEnabled(true);
                txtMes2.setEnabled(true);
                txtAno2.setEnabled(true);
                btnBuscar.setEnabled(false);
                
            }else{
                JOptionPane.showMessageDialog(null, "Cliente no encontrado");
                btnAgregar.setVisible(false);
            }
        }else{
            txtCedula.setText("");
            txtNombre.setText("");
            txtApellido.setText("");
            txtDireccion.setText("");
            txtTelefono.setText("");
            txtCorreo.setText("");
            txtCedula.setEditable(true);
            btnEliminar.setVisible(false);
            btnAgregar.setVisible(true);
            btnBuscaCliente.setText("Buscar cliente");
            txtDia1.setText("");
            txtMes1.setText("");
            txtAno1.setText("");
            txtDia2.setText("");
            txtMes2.setText("");
            txtAno2.setText("");
            txtDia1.setEnabled(false);
            txtMes1.setEnabled(false);
            txtAno1.setEnabled(false);
            txtDia2.setEnabled(false);
            txtMes2.setEnabled(false);
            txtAno2.setEnabled(false);
            txtNumero.setText("");
            txtNumero.setEnabled(true);
            btnBuscar.setEnabled(true);
            lblDia2.setForeground(Color.black);
            lblMes2.setForeground(Color.black);
            btnAgregar.setVisible(false);

        }
        lblCedula.setForeground(Color.black);
    }//GEN-LAST:event_btnBuscaClienteActionPerformed

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        char validar=evt.getKeyChar();
            
        if ((int)validar>32 && (int)validar<=47
                || (int)validar>58 && (int)validar<=255) {
            getToolkit().beep();
            evt.consume();
        }
        if (txtCedula.getText().length()>9) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void txtDia2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDia2KeyTyped
        char validar=evt.getKeyChar();
        if ((int)validar>32 && (int)validar<=47
                || (int)validar>58 && (int)validar<=255) {
            getToolkit().beep();
            evt.consume();
        }
        if (txtDia2.getText().length()>1) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtDia2KeyTyped

    private void txtDia2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDia2FocusLost
        if (txtDia2.getText().length()<1) {
            lblDia2.setForeground(Color.red);
        }else{
            if (Integer.parseInt(txtDia2.getText())>31 && "".equals(txtMes2.getText())) {
                lblDia2.setForeground(Color.red);
            } else {
                if (Integer.parseInt(txtDia2.getText())>31 && ("1".equals(txtMes2.getText()) || "3".equals(txtMes2.getText()) || "5".equals(txtMes2.getText()) || "7".equals(txtMes2.getText()) || "8".equals(txtMes2.getText()) || "10".equals(txtMes2.getText()) || "12".equals(txtMes2.getText()))) {
                    lblDia2.setForeground(Color.red);
                } else {
                    if (Integer.parseInt(txtDia2.getText())>30 && ("4".equals(txtMes2.getText()) || "6".equals(txtMes2.getText()) || "9".equals(txtMes2.getText()) || "11".equals(txtMes2.getText()))) {
                        lblDia2.setForeground(Color.red);
                    } else {
                        if (Integer.parseInt(txtDia2.getText())>28 && "2".equals(txtMes2.getText())&& !anioBiciesto(Integer.parseInt(txtAno2.getText()))) {
                            lblDia2.setForeground(Color.red);
                        } else {
                            if (Integer.parseInt(txtDia2.getText())>29 && "2".equals(txtMes2.getText()) && anioBiciesto(Integer.parseInt(txtAno2.getText()))) {
                                lblDia2.setForeground(Color.red);
                            }else{
                                lblDia2.setForeground(Color.green);
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_txtDia2FocusLost

    private void txtMes2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMes2KeyTyped
        char validar=evt.getKeyChar();
        if ((int)validar>32 && (int)validar<=47
                || (int)validar>58 && (int)validar<=255) {
            getToolkit().beep();
            evt.consume();
        }
        if (txtMes2.getText().length()>1) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMes2KeyTyped

    private void txtMes2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMes2FocusLost
        if (Integer.parseInt(txtMes2.getText())>12) {
            lblMes2.setForeground(Color.red);
        }else{
            lblMes2.setForeground(Color.green);
        }
        if (txtDia2.getText().length()<1) {
            lblDia2.setForeground(Color.red);
        }else{
            if (Integer.parseInt(txtDia2.getText())>31 && "".equals(txtMes2.getText())) {
                lblDia2.setForeground(Color.red);
            } else {
                if (Integer.parseInt(txtDia2.getText())>31 && ("1".equals(txtMes2.getText()) || "3".equals(txtMes2.getText()) || "5".equals(txtMes2.getText()) || "7".equals(txtMes2.getText()) || "8".equals(txtMes2.getText()) || "10".equals(txtMes2.getText()) || "12".equals(txtMes2.getText()))) {
                    lblDia2.setForeground(Color.red);
                } else {
                    if (Integer.parseInt(txtDia2.getText())>30 && ("4".equals(txtMes2.getText()) || "6".equals(txtMes2.getText()) || "9".equals(txtMes2.getText()) || "11".equals(txtMes2.getText()))) {
                        lblDia2.setForeground(Color.red);
                    } else {
                        if (Integer.parseInt(txtDia2.getText())>28 && "2".equals(txtMes2.getText())&& !anioBiciesto(Integer.parseInt(txtAno2.getText()))) {
                            lblDia2.setForeground(Color.red);
                        } else {
                            if (Integer.parseInt(txtDia2.getText())>29 && "2".equals(txtMes2.getText()) && anioBiciesto(Integer.parseInt(txtAno2.getText()))) {
                                lblDia2.setForeground(Color.red);
                            }else{
                                lblDia2.setForeground(Color.green);
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_txtMes2FocusLost

    private void txtAno2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAno2KeyTyped
        char validar=evt.getKeyChar();
        if ((int)validar>32 && (int)validar<=47
                || (int)validar>58 && (int)validar<=255) {
            getToolkit().beep();
            evt.consume();
        }
        if (txtAno2.getText().length()>3) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAno2KeyTyped

    private void txtAno2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAno2FocusLost
        if (txtDia2.getText().length()<1) {
            lblDia2.setForeground(Color.red);
        }else{
            if (Integer.parseInt(txtDia2.getText())>31 && "".equals(txtMes2.getText())) {
                lblDia2.setForeground(Color.red);
            } else {
                if (Integer.parseInt(txtDia2.getText())>31 && ("1".equals(txtMes2.getText()) || "3".equals(txtMes2.getText()) || "5".equals(txtMes2.getText()) || "7".equals(txtMes2.getText()) || "8".equals(txtMes2.getText()) || "10".equals(txtMes2.getText()) || "12".equals(txtMes2.getText()))) {
                    lblDia2.setForeground(Color.red);
                } else {
                    if (Integer.parseInt(txtDia2.getText())>30 && ("4".equals(txtMes2.getText()) || "6".equals(txtMes2.getText()) || "9".equals(txtMes2.getText()) || "11".equals(txtMes2.getText()))) {
                        lblDia2.setForeground(Color.red);
                    } else {
                        if (Integer.parseInt(txtDia2.getText())>28 && "2".equals(txtMes2.getText())&& !anioBiciesto(Integer.parseInt(txtAno2.getText()))) {
                            lblDia2.setForeground(Color.red);
                        } else {
                            if (Integer.parseInt(txtDia2.getText())>29 && "2".equals(txtMes2.getText()) && anioBiciesto(Integer.parseInt(txtAno2.getText()))) {
                                lblDia2.setForeground(Color.red);
                            }else{
                                lblDia2.setForeground(Color.green);
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_txtAno2FocusLost

    private void btnMasServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMasServicioActionPerformed
        String servicios;
        servicios=cboServicio.getSelectedItem().toString();
        buscarServicioCombo(servicios);

        //float costoPaque=Float.parseFloat(txtCostoPaquete.getText());
        float costoServi=BusServi.getCosto();
        calcularSubtotal();
    }//GEN-LAST:event_btnMasServicioActionPerformed

    private void btnMasPaqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMasPaqueteActionPerformed
        String paquetes;
        paquetes=cboPaquete.getSelectedItem().toString();
        buscarPaqueteCombo(paquetes);

        //float costoPaque=Float.parseFloat(txtCostoPaquete.getText());
        float costoPaq=BusPaq.getCosto();
        calcularSubtotal();
    }//GEN-LAST:event_btnMasPaqueteActionPerformed

    private void btnMenosPaqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenosPaqueteActionPerformed
        removeSelectedRows(TablaPaquetes);
        total--;
        calcularSubtotal();
    }//GEN-LAST:event_btnMenosPaqueteActionPerformed

    private void btnMenosServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenosServicioActionPerformed
        removeSelectedRows1(TablaServicios);
        total1--;
        calcularSubtotal();
    }//GEN-LAST:event_btnMenosServicioActionPerformed

    private void cboPromocionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPromocionActionPerformed
        calcularSubtotal();
    }//GEN-LAST:event_cboPromocionActionPerformed

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        char validar=evt.getKeyChar();
        if ((int)validar>32 && (int)validar<=47
                || (int)validar>58 && (int)validar<=255) {
            getToolkit().beep();
            evt.consume();
        }
        if (txtNumero.getText().length()>5) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
        JFileChooser dlg=new JFileChooser();
         int opcion=dlg.showSaveDialog(this);
         if(opcion==JFileChooser.APPROVE_OPTION){
             File f= dlg.getSelectedFile();
             ruta=f.toString();
         }
         // TODO add your handling code here:
         Document doc=new Document();
        try {
            FileOutputStream archivo =new FileOutputStream(ruta+".pdf");
            
            PdfWriter.getInstance(doc, archivo);
            doc.open();
            doc.add(new Paragraph("COMPROBANTE DE VENTA\n"));
            doc.add(new Paragraph("FECHA: "+txtAno1.getText()+"/"+txtMes1.getText()+"/"+txtDia1.getText()+"\n"));
            doc.add(new Paragraph("CI: "+txtCedula.getText()+"\n"));
            doc.add(new Paragraph("CLIENTE: "+txtNombre.getText()+" "+txtApellido.getText()+"\n\n"));
            doc.add(new Paragraph("DETALLE:\n\n"));
            doc.add(new Paragraph("PAQUETE/SERVICIO \t\t\t\t\t\t\t\t\t\tCOSTO:\n"));;
            doc.add(new Paragraph("========================================\n"));;
            
            Conexion conex = new Conexion();
            String linea=null;
            try {
                PreparedStatement consulta = conex.getConexion().prepareStatement("select S.nombre,S.costo from paquete S, paquete_nota SE where S.nombre=SE.nombre and SE.numero='" + txtNumero.getText()+"'");
                ResultSet res = consulta.executeQuery();//permite que se ejecuta la busqueda en consulta, result set es un arraylist de los objetos de busqueda.
                while (res.next()) {
                    linea="";
                    linea=linea+res.getString("nombre")+"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"+res.getString("costo")+"\n";
                    doc.add(new Paragraph(linea));
                }
                res.close();
                conex.desconectar();
            } catch (SQLException e) {
                System.out.println("" + e.getMessage());
            }
            conex = new Conexion();
            try {
                PreparedStatement consulta = conex.getConexion().prepareStatement("select S.nombre,S.costo from servicio S, servicio_nota SE where S.nombre=SE.nombre and SE.numero='" + txtNumero.getText()+"'");
                ResultSet res = consulta.executeQuery();//permite que se ejecuta la busqueda en consulta, result set es un arraylist de los objetos de busqueda.
                while (res.next()) {
                    linea="";
                    linea=linea+res.getString("nombre")+"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"+res.getString("costo")+"\n";
                    doc.add(new Paragraph(linea));
                }
                res.close();
                conex.desconectar();
            } catch (SQLException e) {
                System.out.println("" + e.getMessage());
            }
            doc.add(new Paragraph("========================================\n"));;
            doc.add(new Paragraph("SUBTOTAL \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"+txtSubtotal.getText()+"\n"));;
            doc.add(new Paragraph("DESCUENTO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"+txtDescuento.getText()+"\n"));;
            doc.add(new Paragraph("========================================\n"));;
            doc.add(new Paragraph("TOTAL    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"+txtTotal.getText()+"\n"));;
            doc.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(vistaReportes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(vistaReportes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vistaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vistaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vistaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vistaNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vistaNota(new EmpleadoVO()).setVisible(true);
            }
        });
    }
    public boolean validaCedula(String x){
        int suma=0;
        if(x.length()==9){
            return false;
        }else{
            int a[]=new int [x.length()/2];
            int b[]=new int [(x.length()/2)];
            int c=0;
            int d=1;
            for (int i = 0; i < x.length()/2; i++) {
                a[i]=Integer.parseInt(String.valueOf(x.charAt(c)));
                c=c+2;
                if (i < (x.length()/2)-1) {
                    b[i]=Integer.parseInt(String.valueOf(x.charAt(d)));
                    d=d+2;
                }
            }
            for (int i = 0; i < a.length; i++) {
                a[i]=a[i]*2;
                if (a[i] >9){
                    a[i]=a[i]-9;
                }
                suma=suma+a[i]+b[i];
            } 
            int aux=suma/10;
            int dec=(aux+1)*10;
            if ((dec - suma) == Integer.parseInt(String.valueOf(x.charAt(x.length()-1))))
                return true;
            else
                if(suma%10==0 && x.charAt(x.length()-1)=='0'){
                    return true;
                }else{
                    return false;
                }
        }
    }
    public boolean anioBiciesto(int anio){
        GregorianCalendar calendar = new GregorianCalendar();
        System.out.println("anio abajo> "+calendar.isLeapYear(anio));
        if (calendar.isLeapYear(anio))
            return true;
        else
            return false;
    }
    int i=0;
    int total=0;
    int total1=0;
    int cont=1;
    int cont1=1;
    public void buscarServicioCombo(String nombre) {
        int totalServicio=total1;      
        Conexion conex = new Conexion();
        BusServi = new ServicioVO();
        boolean existe = false;
        try {
            PreparedStatement consulta = conex.getConexion().prepareStatement("SELECT *FROM Servicio where nombre=?");
            consulta.setString(1, nombre);//
            ResultSet res = consulta.executeQuery();//permite que se ejecuta la busqueda en consulta, result set es un arraylist de los objetos de busqueda.
            while (res.next()) {
                existe = true;
                BusServi.setNombre((res.getString("nombre")));
                // persona.setId(res.getInt(1));
                BusServi.setCosto((Float.parseFloat(res.getString("costo"))));
                BusServi.setDescripcion(res.getString("descripcion"));
             existe = true;
             BusServi.setCosto((Float.parseFloat(res.getString("costo"))));
                 String cos=Float.toString(BusServi.getCosto());
                  
                  TablaServicios.setValueAt(BusServi.getNombre(), total1,0);
                   TablaServicios.setValueAt(BusServi.getCosto(), total1,1);
            
                    cont1++;
                    total1++;
            }
            
            res.close();
            conex.desconectar();

        } catch (SQLException e) {
            System.out.println("" + e.getMessage());
           
        }
        if (existe) {
//         JOptionPane.showMessageDialog(null,"Servicio -->"+BusServi.getNombre()+"  "+"Costo -->"+ BusServi.getCosto()+"  "+"Descripcion -->"+BusServi.getDescripcion());
             
        } else {
             JOptionPane.showMessageDialog(null,"No se encontro el servicio");
        }
    }
    public void buscarPaqueteCombo(String nombre) {
        int totalServicio=total;      
        Conexion conex = new Conexion();
        BusPaq = new PaqueteVO();
        boolean existe = false;
        try {
            PreparedStatement consulta = conex.getConexion().prepareStatement("SELECT *FROM Paquete where nombre=?");
            consulta.setString(1, nombre);//
            ResultSet res = consulta.executeQuery();//permite que se ejecuta la busqueda en consulta, result set es un arraylist de los objetos de busqueda.
            while (res.next()) {
                existe = true;
                BusPaq.setNombre((res.getString("nombre")));
                // persona.setId(res.getInt(1));
                BusPaq.setCosto((Float.parseFloat(res.getString("costo"))));
             existe = true;
             BusPaq.setCosto((Float.parseFloat(res.getString("costo"))));
                 String cos=Float.toString(BusPaq.getCosto());
                  
                  TablaPaquetes.setValueAt(BusPaq.getNombre(), total,0);
                   TablaPaquetes.setValueAt(BusPaq.getCosto(), total,1);
            
                    cont++;
                    total++;
            }
            
            res.close();
            conex.desconectar();

        } catch (SQLException e) {
            System.out.println("" + e.getMessage());
           
        }
        if (existe) {
//         JOptionPane.showMessageDialog(null,"Servicio -->"+BusServi.getNombre()+"  "+"Costo -->"+ BusServi.getCosto()+"  "+"Descripcion -->"+BusServi.getDescripcion());
             
        } else {
             JOptionPane.showMessageDialog(null,"No se encontro el servicio");
        }
    }
    public void removeSelectedRows(JTable table){
    DefaultTableModel model = (DefaultTableModel) this.TablaPaquetes.getModel();
    int[] rows = table.getSelectedRows();
    for(int i=0;i<rows.length;i++){
      model.removeRow(rows[i]-i);
    }
    }
    public void removeSelectedRows1(JTable table){
    DefaultTableModel model = (DefaultTableModel) this.TablaServicios.getModel();
    int[] rows = table.getSelectedRows();
    for(int i=0;i<rows.length;i++){
      model.removeRow(rows[i]-i);
    }
    }
    
    public void calcularSubtotal(){
        float subtotal1 = 0; 
        float subtotal2 = 0; 
        for (int j = 0; j < total; j++) {
            subtotal1 =subtotal1 + (float) TablaPaquetes.getValueAt(j, 1); //La columna 2 es la de total
        }
        for (int j = 0; j < total1; j++) {
            subtotal2 = subtotal2 + (float) TablaServicios.getValueAt(j, 1); //La columna 2 es la de total
        }
        subtotal=subtotal1+subtotal2;
        txtSubtotal.setText(Float.toString(subtotal));
        
        PromocionVO promo = new PromocionVO();
        promo.ObtenerPromocion(cboPromocion.getSelectedItem().toString());
        descuento=subtotal*promo.getDescuento()/100;
        txtDescuento.setText(Float.toString(descuento));
        
        totalPago=subtotal-descuento;
        txtTotal.setText(Float.toString(totalPago));
        txtPorcentaje.setText(Float.toString(promo.getDescuento())+" %");
        
    }
    
    public boolean todoOK(){
        if ("".equals(txtNombre.getText())) {
            return false;
        } else {
            nota.setCi_cli(txtCedula.getText());
            nota.setNumero(Integer.parseInt(txtNumero.getText()));
            if (cboPromocion.getSelectedItem().toString()=="Ninguno") {
                nota.setNombre_pro(null);
            } else {
                nota.setNombre_pro(cboPromocion.getSelectedItem().toString());
            }
            try {
                Calendar cal1 = Calendar.getInstance();
                cal1.set(Calendar.YEAR, Integer.parseInt(txtAno1.getText()));
                cal1.set(Calendar.MONTH, Integer.parseInt(txtMes1.getText()) - 1);
                cal1.set(Calendar.DAY_OF_MONTH, Integer.parseInt(txtDia1.getText()));
                Calendar cal2 = Calendar.getInstance();
                cal2.set(Calendar.YEAR, Integer.parseInt(txtAno2.getText()));
                cal2.set(Calendar.MONTH, Integer.parseInt(txtMes2.getText()) - 1);
                cal2.set(Calendar.DAY_OF_MONTH, Integer.parseInt(txtDia2.getText()));
                if (cal2.compareTo(cal1)>=0) {
                    nota.setFecha_contrato(new Date(cal1.getTimeInMillis()));
                    nota.setFecha_evento(new Date(cal2.getTimeInMillis()));
                } else {
                    return false;
                }
            } catch (Exception e) {
                return false;
            }
            
        }
                
        return true;
    }
    public void AgregarNuevaNota() {
        Conexion conex = new Conexion();
        Connection cn = conex.getConexion();
        try {
            PreparedStatement orden = cn.prepareStatement("INSERT INTO nota_venta VALUES (?,?,?,?,?)");
            orden.setInt(1, nota.getNumero());
            orden.setString(2, nota.getCi_cli());
            orden.setString(3, nota.getNombre_pro());
            orden.setDate(4, nota.getFecha_contrato());
            orden.setDate(5, nota.getFecha_evento());
            orden.executeUpdate();
            //JOptionPane.showMessageDialog(null, "Registro exitoso!");
        } catch (SQLException e) {
            System.out.println("" + e.getMessage());
            //JOptionPane.showMessageDialog(null, "No se puede registrar");
        }
    }
    
    public void recorrerPaquete(){
        for (int i = 0; i < TablaPaquetes.getRowCount(); i++) {
            String pac="";
            pac=""+TablaPaquetes.getValueAt(i, 0);
            Conexion conex = new Conexion();
            Connection cn = conex.getConexion();
            try {
                PreparedStatement orden = cn.prepareStatement("INSERT INTO paquete_nota VALUES (?,?)");
                orden.setString(1, pac);
                orden.setInt(2, nota.getNumero());
                orden.executeUpdate();
                //JOptionPane.showMessageDialog(null, "Registro exitoso!");
            } catch (SQLException e) {
                System.out.println("" + e.getMessage());
                //JOptionPane.showMessageDialog(null, "No se puede registrar");
            }
        }
    }
    public void recorrerServicio(){
        for (int i = 0; i < TablaServicios.getRowCount(); i++) {
            String pac="";
            pac=""+TablaServicios.getValueAt(i, 0);
            Conexion conex = new Conexion();
            Connection cn = conex.getConexion();
            try {
                PreparedStatement orden = cn.prepareStatement("INSERT INTO servicio_nota VALUES (?,?)");
                orden.setString(1, pac);
                orden.setInt(2, nota.getNumero());
                orden.executeUpdate();
                //JOptionPane.showMessageDialog(null, "Registro exitoso!");
            } catch (SQLException e) {
                System.out.println("" + e.getMessage());
                //JOptionPane.showMessageDialog(null, "No se puede registrar");
            }
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable TablaPaquetes;
    public javax.swing.JTable TablaServicios;
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnBuscaCliente;
    public javax.swing.JButton btnBuscar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnHome;
    public javax.swing.JButton btnImprimir;
    public javax.swing.JButton btnMasPaquete;
    public javax.swing.JButton btnMasServicio;
    public javax.swing.JButton btnMenosPaquete;
    public javax.swing.JButton btnMenosServicio;
    public javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cboPaquete;
    private javax.swing.JComboBox<String> cboPromocion;
    private javax.swing.JComboBox<String> cboServicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAno2;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblDia2;
    private javax.swing.JLabel lblMes2;
    public javax.swing.JTextField txtAno1;
    public javax.swing.JTextField txtAno2;
    public javax.swing.JTextField txtApellido;
    public javax.swing.JTextField txtCedula;
    public javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDescuento;
    public javax.swing.JTextField txtDia1;
    public javax.swing.JTextField txtDia2;
    public javax.swing.JTextField txtDireccion;
    public javax.swing.JTextField txtMes1;
    public javax.swing.JTextField txtMes2;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtPorcentaje;
    private javax.swing.JTextField txtSubtotal;
    public javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
